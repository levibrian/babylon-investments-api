name: deploy-to-dev

on: workflow_dispatch

jobs:
  deploy-to-dev:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '3.1.x' ]

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET dependencies
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Install AWS lambda tools
        run: dotnet tool install -g Amazon.Lambda.Tools

#      - name: Restore dependencies
#        run: dotnet restore
#        working-directory: src/Ivas.Transactions
#
#      - name: Build solution
#        run: dotnet build --no-restore
#        working-directory: src/Ivas.Transactions
#
#      - name: Run unit tests
#        run: dotnet test --no-build --verbosity normal
#        working-directory: src/Ivas.Transactions
#
#      - name: Create artifacts
#        run: ./PackageLambdas.ps1 -repoFolder ../
#        shell: pwsh
#        working-directory: scripts

      - name: Verify terraform version
        run: terraform --version
        working-directory: terraform/transaction-service

      - name: Terraform init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY_ID }}
        run: terraform init -input=false
        working-directory: terraform/transaction-service

      - name: Check terraform workspace
        run: terraform workspace new dev
        working-directory: terraform/transaction-service    
    
      - name: Check terraform workspace
        run: terraform workspace show
        working-directory: terraform/transaction-service

      - name: Terraform init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY_ID }}
        run: terraform init -input=false
        working-directory: terraform/transaction-service

#      - name: Install Terraform
#        env:
#          TERRAFORM_VERSION: "1.1.3"
#        run: |
#          tf_version=$TERRAFORM_VERSION
#          wget https://releases.hashicorp.com/terraform/"$tf_version"/terraform_"$tf_version"_linux_amd64.zip
#          unzip terraform_"$tf_version"_linux_amd64.zip
#          sudo mv terraform /usr/local/bin/
          
      # terraform workspace create dev
      # terraform init
      # terraform fmt
      # terraform plan
      # terraform apply