name: deploy-to-dev

on: workflow_dispatch

jobs:
  deploy-to-dev:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '3.1.x' ]

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET dependencies
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
          
      - name: Install AWS lambda tools
        run: dotnet tool install -g Amazon.Lambda.Tools
      
      - name: Setup terraform
        uses: hashicorp/setup-terraform@v1

  - name: Terraform format
    id: fmt
    run: terraform fmt -check
    continue-on-error: true

  - name: Terraform initialize
    id: init
    run: terraform init

  - name: Terraform directory files validation
    id: validate
    run: terraform validate -no-color

  - name: Terraform plan
    id: plan
    run: terraform plan -no-color
    continue-on-error: true

  - uses: actions/github-script@0.9.0
    if: github.event_name == 'workflow_dispatch'
    env:
      PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
    with:
      github-token: ${{ secrets.GITHUB_TOKEN }}
      script: |
        const output = `#### Terraform Format and Style 🖌\`${{ steps.fmt.outcome }}\`
        #### Terraform Initialization ⚙️\`${{ steps.init.outcome }}\`
        #### Terraform Validation 🤖\`${{ steps.validate.outputs.stdout }}\`
        #### Terraform Plan 📖\`${{ steps.plan.outcome }}\`

        <details><summary>Show Plan</summary>

        \`\`\`\n
        ${process.env.PLAN}
        \`\`\`

        </details>

        *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

        github.issues.createComment({
        issue_number: context.issue.number,
        owner: context.repo.owner,
        repo: context.repo.repo,
        body: output
        })